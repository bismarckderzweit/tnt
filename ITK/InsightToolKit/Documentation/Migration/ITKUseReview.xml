<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Change SYSTEM "https://itk.org/migrationv4/ITKMigration.dtd">

<!--**
**
** ITKUseReview.xml
**
** >>>>>>>>>>>>>>>>>>>>>>>>>>>>
** THIS FILE HAS BEEN AUTOMATICALLY GENERATED. EDIT IT BEFORE COMMITING
** <<<<<<<<<<<<<<<<<<<<<<<<<<<
**
** Please, make sure this file validates the following w3c test before committing it: http://validator.w3.org
**-->
<Change>
    <!--**
    ** Title for the online migration page
    **-->
    <Title>
      ITK_USE_REVIEW is now deprecated
    </Title>

    <!--**
    ** The author of the change
    **-->
    <Author>
      Xiaoxiao Liu
    </Author>

    <!--**
    ** Date of creation for the XML document
    **-->
    <Date>
      2013-08-15
    </Date>

    <!--**
    ** Plain text description of the change
    ** Extracted from git commit messages
    **-->
    <Description>
      <![CDATA[
      After modularization of ITKv4, ITKReview module contains all the code in the
      ITKv3 "Review" directory. There were two CMake variables (ITK_USE_REVIEW and
      Module_ITKReview) that could enable/disable ITKReview module.

      To avoid confusion and redundancy,the usage of "ITK_USE_REVIEW" is now deprecated.

      The correct way to enable the ITKReview module now is via CMake variable
      "Module_ITKReview".  A CMake warning message will be shown during the configuration
      if ITK_USE_REVIEW is used.
      ]]>
    </Description>


    <!--**
    ** The change-ids for all commits in the topic branch
    **-->
    <Gerrit-ChangeId>
      Ied3a3176a4b7b64f65576274b13fc74456149fe5
      I8e0ff84634dc2f4bc7a2f8e6a30411ad798a410c
    </Gerrit-ChangeId>

    <!--**
    ** List of all changed files from the topic branch
    **-->
    <FileList>
      CMake/ITKConfig.cmake.in
      CMake/itkSampleBuildTest.cmake.in
      CMakeLists.txt
      Modules/Core/Common/src/itkConfigure.h.in
      Modules/Nonunit/Review/CMakeLists.txt
    </FileList>

    <!--**
    ** If the migration can be accomplished by a simple string
    ** substitution, then use the following construct to define
    ** the substitution rule.
    **
    ** <MigrationFix-Automatic>
    **   <Old>
    **     <![CDATA[MipsleledName]]>
    **   </Old>
    **   <New>
    **     <![CDATA[MisspelledName]]>
    **   </New>
    ** </MigrationFix-Automatic>
    **-->

    <!--**
    ** If the migration can NOT be accomplished by a simple string
    ** substitution, but potential problem spots can be identified,
    ** use the following construct to define a migration flag rule.
    **
    ** <MigrationFix-Manual>
    **   OldFunctionName
    ** </MigrationFix-Manual>
    **-->

</Change>
