<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Change SYSTEM "https://itk.org/migrationv4/ITKMigration.dtd">

<!--**
**
** DanielssonVoronoiMapType.xml
**
** >>>>>>>>>>>>>>>>>>>>>>>>>>>>
** THIS FILE HAS BEEN AUTOMATICALLY GENERATED. EDIT IT BEFORE COMMITING
** <<<<<<<<<<<<<<<<<<<<<<<<<<<
**
** Please, make sure this file validates the following w3c test before committing it: http://validator.w3.org
**-->
<Change>
    <!--**
    ** Title for the online migration page
    **-->
    <Title>
      Danielsson Voronoi Map Type
    </Title>

    <!--**
    ** The author of the change
    **-->
    <Author>
      Arnaud Gelas
    </Author>

    <!--**
    ** Date of creation for the XML document
    **-->
    <Date>
      2011-07-26
    </Date>

    <!--**
    ** Plain text description of the change
    ** Extracted from git commit messages
    **-->
    <Description>
      <![CDATA[
      BUG: Add an extra template parameter in *DanielssonDistanceMapFilter for the Voronoi Map.
      The new default template parameter is TInputImage.

      Fix ITK-227.
      ]]>
    </Description>

    <!--**
    ** Sample code snippets
    ** Extracted from git diff of changed files in Examples and Testing
    **-->
    <SampleCode>
      <Old>
        <![CDATA[
        typedef itkDanielssonDistanceMapImageFilter< InputImageType, OutputImageType > FilterType;
        FilterType::Pointer filter = FilterType::New();
        filter->SetInput( input );
        filter->Update();

        OutputImageType* voronoi = filter->GetVoronoiMap();
        ]]>
      </Old>

      <New>
        <![CDATA[
        typedef itkDanielssonDistanceMapImageFilter< InputImageType, OutputImageType > FilterType;
        FilterType::Pointer filter = FilterType::New();
        filter->SetInput( input );
        filter->Update();

        InputImageType* voronoi = filter->GetVoronoiMap();
        ]]>
      </New>

    </SampleCode>

    <SampleCode>
      <Old>
        <![CDATA[
        typedef itkDanielssonDistanceMapImageFilter< InputImageType, OutputImageType > FilterType;
        FilterType::Pointer filter = FilterType::New();
        filter->SetInput( input );
        filter->Update();

        OutputImageType* voronoi = filter->GetVoronoiMap();
        ]]>
      </Old>

      <New>
        <![CDATA[
        typedef itkDanielssonDistanceMapImageFilter< InputImageType, OutputImageType, VoronoiImageType > FilterType;
        FilterType::Pointer filter = FilterType::New();
        filter->SetInput( input );
        filter->Update();

        VoronoiImageType* voronoi = filter->GetVoronoiMap();
        ]]>
      </New>

    </SampleCode>

    <!--**
    ** The change-ids for all commits in the topic branch
    **-->
    <Gerrit-ChangeId>
      I8043661041ea427acf2a0e997c573c45212634b6
    </Gerrit-ChangeId>

    <!--**
    ** List of all changed files from the topic branch
    **-->
    <FileList>
      Documentation/Migration/DanielssonVoronoiMapType.xml
      Examples/Filtering/DanielssonDistanceMapImageFilter.cxx
      Examples/Filtering/SignedDanielssonDistanceMapImageFilter.cxx
      Modules/Filtering/DistanceMap/include/itkDanielssonDistanceMapImageFilter.h
      Modules/Filtering/DistanceMap/include/itkDanielssonDistanceMapImageFilter.hxx
      Modules/Filtering/DistanceMap/include/itkSignedDanielssonDistanceMapImageFilter.h
      Modules/Filtering/DistanceMap/include/itkSignedDanielssonDistanceMapImageFilter.hxx
      Modules/Filtering/DistanceMap/test/itkDanielssonDistanceMapImageFilterTest.cxx
      Modules/Filtering/DistanceMap/test/itkSignedDanielssonDistanceMapImageFilterTest.cxx
    </FileList>

    <!--**
    ** If the migration can be accomplished by a simple string
    ** substitution, then use the following construct to define
    ** the substitution rule.
    **
    ** <MigrationFix-Automatic>
    **   <Old>
    **     <![CDATA[MipsleledName]]>
    **   </Old>
    **   <New>
    **     <![CDATA[MisspelledName]]>
    **   </New>
    ** </MigrationFix-Automatic>
    **-->

    <!--**
    ** If the migration can NOT be accomplished by a simple string
    ** substitution, but potential problem spots can be identified,
    ** use the following construct to define a migration flag rule.
    **
    ** <MigrationFix-Manual>
    **   OldFunctionName
    ** </MigrationFix-Manual>
    **-->

</Change>
